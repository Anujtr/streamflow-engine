syntax = "proto3";

package streamflow.v1;

option go_package = "github.com/Anujtr/streamflow-engine/api/proto";

import "google/protobuf/timestamp.proto";

service MessageService {
  rpc Produce(ProduceRequest) returns (ProduceResponse);
  rpc Consume(ConsumeRequest) returns (stream ConsumeResponse);
  rpc Health(HealthRequest) returns (HealthResponse);
}

message Message {
  string key = 1;
  bytes value = 2;
  int32 partition = 3;
  google.protobuf.Timestamp timestamp = 4;
  int64 offset = 5;
}

message ProduceRequest {
  string topic = 1;
  repeated Message messages = 2;
}

message ProduceResponse {
  repeated ProduceResult results = 1;
}

message ProduceResult {
  int32 partition = 1;
  int64 offset = 2;
  string error = 3;
}

message ConsumeRequest {
  string topic = 1;
  string consumer_group = 2;
  int32 partition = 3;
  int64 offset = 4;
  int32 max_messages = 5;
}

message ConsumeResponse {
  repeated Message messages = 1;
  bool has_more = 2;
  string error = 3;
}

message HealthRequest {}

message HealthResponse {
  string status = 1;
  string version = 2;
  map<string, string> metrics = 3;
}